# -*- coding: utf-8 -*-
"""Diebitis.Tree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tJ2QoIGjPH8I4mBkK3mvVEKWOWGFP7I-
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix,accuracy_score,precision_score,recall_score,f1_score

df=pd.read_csv("/content/diabetes.csv")
df

x = df[["Pregnancies", "Glucose", "BloodPressure", "SkinThickness", "Insulin", "BMI", "DiabetesPedigreeFunction", "Age"]].values
y = df["Outcome"].values
print(x,y)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)
decisiontree=DecisionTreeClassifier(max_depth=3,criterion="entropy")
decisiontree.fit(x_train,y_train)

confusion_matrix=confusion_matrix(y_test,decisiontree.predict(x_test))
print(confusion_matrix)
print(classification_report(y_test,decisiontree.predict(x_test)))

accuracy_score(y_test,decisiontree.predict(x_test))

precision_score(y_test,decisiontree.predict(x_test))

recall_score(y_test,decisiontree.predict(x_test))
f1_score(y_test,decisiontree.predict(x_test))

from sklearn import tree
plt.figure(figsize=(10,10))
tree.plot_tree(decisiontree,filled=True)
plt.show()