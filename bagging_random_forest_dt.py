# -*- coding: utf-8 -*-
"""Bagging_Random_Forest_DT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i5ii2QBgnBxkBA12n1iD5K6AR6To9PuW
"""

# Bagging with Decision Tree
# import libaraies
from sklearn.ensemble import BaggingClassifier # Corrected typo: 'emsamble' to 'ensemble'
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier # Corrected typo: 'sklearm.emsamble' to 'sklearn.ensemble'
from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score ,precision_score# Corrected typo: 'skklearn.metrics' to 'sklearn.metrics'

# synthetic data
x,y=make_classification(n_samples=1000
                        ,n_features=10,
                        random_state=20
                        )
print(x,y)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=20)

# Intlize the decision Tree classifier:
base_estimator=DecisionTreeClassifier(random_state=20)

#  Intiialize The bagging Classifier:
base_estimator = DecisionTreeClassifier(random_state=20)  # Define base_estimator within this cell
Bagging__classifier = BaggingClassifier(
    estimator=base_estimator,
    n_estimators=100,
    random_state=20)

# train The bagging classifier:
Bagging__classifier.fit(x_train,y_train)

# Make Predication:
y_pred=Bagging__classifier.predict(x_test)

# Evaluate  Model Accuracy:
accuracy=accuracy_score(y_test,y_pred)
print("Accuracy",accuracy)

precision_score=precision_score(y_test,y_pred)
print("Precision",precision_score)

import seaborn as sns
import matplotlib.pyplot as plt
sns.load_dataset("iris")