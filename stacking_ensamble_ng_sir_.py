# -*- coding: utf-8 -*-
"""Stacking_ensamble_NG_SIR_.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mOav_tEK0b9vYO4fXYzywR13VZN_YEtM
"""

from sklearn.model_selection import train_test_split
from sklearn.datasets import load_iris
from sklearn.ensemble import StackingClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

# Load Iris dataset
data = load_iris()
X = data.data
y = data.target

# Split the dataset into training and test sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Define base models (learners)
base_learners = [
    ('dt', DecisionTreeClassifier(random_state=42)),
    ('svc', SVC(probability=True, random_state=42)),
    ('knn', KNeighborsClassifier())
]

# Define the meta-model (stacking model)
meta_model = LogisticRegression()

# Create the stacking classifier
stacking_model = StackingClassifier(estimators=base_learners, final_estimator=meta_model)

# Train the stacking classifier
stacking_model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = stacking_model.predict(X_test)

# Evaluate the model's performance
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy of Stacking Classifier: {accuracy * 100:.2f}%')

# how to find duplicate char in string:
name="manisha"
for i in range(len(name)):
    for j in range(i+1,len(name)):
        if name[i]==name[j]:
            print(name[i])

# how to find mean these list:
list=[10,20,30,40,50]
sum=0
for i in list:
    sum=sum+i
print(sum/len(list))

# how to find mean in dictionary:
dict={"a":10,"b":20,"c":30,"d":40,"e":50}
sum=0
for i in dict.values():
    sum=sum+i
print(sum/len(dict))

# check number is prime or not prime
num=int(input("enter a number :"))
for i in range(2,num):
    if num%i==0:
        print("not prime")
        break
else:
    print("prime")

#